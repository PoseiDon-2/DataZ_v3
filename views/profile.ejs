<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
    crossorigin="anonymous"
  />
</head>
<!-- <style>
    .bmi-container {
        width: 400px;
        padding: 20px;
        background: #ffffff;
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        text-align: center;
    }
    .bmi-container h1 {
        margin-bottom: 20px;
        color: #333;
    }
    .bmi-container input[type="number"] {
        width: 100%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
    }
    .bmi-container button {
        width: 100%;
        padding: 10px;
        margin: 20px 0;
        background-color: #28a745;
        border: none;
        border-radius: 5px;
        color: #fff;
        font-size: 16px;
        cursor: pointer;
    }
    .bmi-container button:hover {
        background-color: #218838;
    }
    .bmi-result {
        margin-top: 20px;
        font-size: 18px;
        font-weight: bold;
    }
    .bmi-status {
        margin-top: 10px;
        font-size: 16px;
        color: #007bff;
    }
</style> -->

<body>
    <%- include('./partials/head.ejs') %> <%- include('./partials/nav.ejs') %>
            <%- include('partials/breadcrumb') %>

    <div class="container">
      <div class="box">
        <h2>โปรไฟล์ของผู้ใช้</h2>
        <% if (user) { %>
            <p><strong>ชื่อ:</strong> <%= user.username %></p>
            <p>BMI: <span id="user-bmi"><%= user.bmi ? user.bmi : 'ไม่พบข้อมูล BMI' %></span></p>
        <% } else { %>
            <p>ไม่พบข้อมูลผู้ใช้</p>
        <% } %>
      </div>

      <div class="box mt-4">
        <h2 class="text-center">ตารางการออกกำลังกาย</h2>
        <div id="calendarControls" class="d-flex justify-content-center mb-3">
          <select id="monthSelect" class="form-select w-auto me-2" onchange="updateCalendar()"></select>
          <select id="yearSelect" class="form-select w-auto" onchange="updateCalendar()"></select>
        </div>
        <div id="calendar"></div>
      </div>

      <div class="box">
        <h2>BMI</h2>
        <div class="bmi-container">
            <h1>BMI Calculator</h1>
            <input type="number" id="weight" placeholder="Enter your weight in kg" min="1">
            <input type="number" id="height" placeholder="Enter your height in cm" min="1">
            <button onclick="calculateBMI()">Calculate BMI</button>
            <div class="bmi-result" id="bmi-result"></div>
            <div class="bmi-status" id="bmi-status"></div>
        </div>
      </div>

      <div class="box">
        <h2>History</h2>
      </div>
    </div>
</body>

</html>

<script>
    function calculateBMI() {
        let weight = parseFloat(document.getElementById("weight").value);
        let height = parseFloat(document.getElementById("height").value) / 100; // แปลงหน่วย cm เป็น m

        if (weight && height) {
            let bmi = weight / (height * height);
            bmi = bmi.toFixed(2); // แสดงทศนิยม 2 ตำแหน่ง

            document.getElementById("bmi-result").innerText = `Your BMI: ${bmi}`;

            let status = "";
            if (bmi < 18.5) {
                status = "Underweight (น้ำหนักน้อยกว่ามาตรฐาน)";
            } else if (bmi >= 18.5 && bmi < 24.9) {
                status = "Normal weight (น้ำหนักปกติ)";
            } else if (bmi >= 25 && bmi < 29.9) {
                status = "Overweight (น้ำหนักเกินมาตรฐาน)";
            } else {
                status = "Obese (โรคอ้วน)";
            }
            document.getElementById("bmi-status").innerText = status;

            // ส่งข้อมูล BMI ไปยังเซิร์ฟเวอร์เพื่อบันทึก
            fetch("/save-bmi", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    userId: "<%= user._id %>", // ใช้ userId ที่แท้จริงจากข้อมูลผู้ใช้
                    bmi: bmi,
                }),
            })
                .then((response) => response.json())
                .then((data) => {
                    if (data.success) {
                        console.log("BMI saved successfully");
                        // อัปเดตค่า BMI ที่แสดงในหน้าโปรไฟล์
                        document.getElementById("user-bmi").innerText = bmi;
                    } else {
                        console.error("Error saving BMI:", data.message);
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                });
        } else {
            document.getElementById("bmi-result").innerText =
                "Please enter valid weight and height!";
            document.getElementById("bmi-status").innerText = "";
        }
    }

    // Global variable to store the current month and year
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth();

    function generateCalendar(year, month) {
        const calendar = document.getElementById("calendar");
        calendar.innerHTML = ""; // Clear previous calendar

        const monthNames = [
            "มกราคม",
            "กุมภาพันธ์",
            "มีนาคม",
            "เมษายน",
            "พฤษภาคม",
            "มิถุนายน",
            "กรกฎาคม",
            "สิงหาคม",
            "กันยายน",
            "ตุลาคม",
            "พฤศจิกายน",
            "ธันวาคม",
        ];

        const table = document.createElement("table");
        table.classList.add("table", "table-bordered");

        const headerRow = document.createElement("tr");
        const days = [
            "อาทิตย์",
            "จันทร์",
            "อังคาร",
            "พุธ",
            "พฤหัสบดี",
            "ศุกร์",
            "เสาร์",
        ];
        days.forEach((day) => {
            const th = document.createElement("th");
            th.textContent = day;
            headerRow.appendChild(th);
        });
        table.appendChild(headerRow);

        const firstDay = new Date(year, month, 1).getDay();
        const daysInMonth = new Date(year, month + 1, 0).getDate();

        let currentDay = 1;
        let row;

        for (let i = 0; i < 6; i++) {
            row = document.createElement("tr");

            for (let j = 0; j < 7; j++) {
                const cell = document.createElement("td");
                if (i === 0 && j < firstDay) {
                    cell.classList.add('empty');
                } else if (currentDay > daysInMonth) {
                    cell.classList.add('empty');
                } else {
                    cell.textContent = currentDay;

                    const today = new Date();
                    if (
                        currentDay === today.getDate() &&
                        month === today.getMonth() &&
                        year === today.getFullYear()
                    ) {
                        cell.classList.add("current-day");
                    }

                    currentDay++;
                }
                row.appendChild(cell);
            }
            table.appendChild(row);
            if (currentDay > daysInMonth) break;
        }

        const monthTitle = document.createElement("h3");
        monthTitle.textContent = monthNames[month] + " " + year;
        calendar.appendChild(monthTitle);
        calendar.appendChild(table);
    }

    function updateCalendar() {
        const monthSelect = document.getElementById("monthSelect");
        const yearSelect = document.getElementById("yearSelect");

        currentMonth = parseInt(monthSelect.value);
        currentYear = parseInt(yearSelect.value);
        generateCalendar(currentYear, currentMonth);
    }

    // Function to move to the previous month
    function prevMonth() {
        currentMonth--;
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear--;
        }
        updateCalendarSelectors();
        generateCalendar(currentYear, currentMonth);
    }

    // Function to move to the next month
    function nextMonth() {
        currentMonth++;
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear++;
        }
        updateCalendarSelectors();
        generateCalendar(currentYear, currentMonth);
    }

    // Update the month and year selectors when month changes
    function updateCalendarSelectors() {
        const monthSelect = document.getElementById("monthSelect");
        const yearSelect = document.getElementById("yearSelect");

        monthSelect.value = currentMonth;
        yearSelect.value = currentYear;
    }

    function populateDateSelectors() {
        const monthSelect = document.getElementById("monthSelect");
        const yearSelect = document.getElementById("yearSelect");

        for (let i = 0; i < 12; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i + 1;
            monthSelect.appendChild(option);
        }

        const currentYear = new Date().getFullYear();
        for (let i = currentYear - 10; i <= currentYear + 10; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i;
            yearSelect.appendChild(option);
        }

        monthSelect.value = new Date().getMonth();
        yearSelect.value = currentYear;

        generateCalendar(currentYear, currentMonth);
    }

    populateDateSelectors();
</script>


